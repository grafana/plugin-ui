name: Plugin E2E
on:
  workflow_call:
jobs:
  checkout:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
  e2e:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        gfVersion: ['8.4.7', 'main', 'latest']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16.16.0
      - name: Download artifacts from test-and-build-frontend
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts-frontend
          path: e2e/artifacts/test-and-build-frontend
      - name: Download artifacts from test-and-build-backend
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts-backend
          path: e2e/artifacts/test-and-build-backend
      - name: Consolidate artifacts
        run: |
          mkdir -p dist
          mkdir -p e2e/artifacts/{test-and-build-frontend,test-and-build-backend}
          cp -r e2e/artifacts/test-and-build-frontend/* dist
          cp -r e2e/artifacts/test-and-build-backend/* dist
          chmod +x dist/gpx*;
          ls -lha dist
      - name: Install dependencies
        run: |
          cd e2e
          yarn install --frozen-lockfile;
      - name: Start the docker container for e2e
        run: |
          cd e2e
          docker-compose pull
          docker-compose up -d
        env:
          GF_VERSION: ${{ matrix.gfVersion }}
          GF_ENTERPRISE_LICENSE_TEXT: ${{ secrets.GF_ENTERPRISE_LICENSE_TEXT }}
      - name: Wait for grafana to start
        uses: nev7n/wait_for_response@v1
        with:
          url: 'http://localhost:3000/'
          responseCode: 200
          timeout: 600000
          interval: 500
      - name: Run E2E
        run: |
          cd e2e
          npx cypress@10.10.0 run
      - name: Stop the docker container
        if: always()
        run: |
          cd e2e
          docker-compose down
        env:
          GF_VERSION: ${{ matrix.gfVersion }}
          GF_ENTERPRISE_LICENSE_TEXT: ${{ secrets.GF_ENTERPRISE_LICENSE_TEXT }}
      - name: Store E2E artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: e2e-artifacts-${{ matrix.gfVersion }}
          path: |
            e2e/cypress/videos
            e2e/cypress/screenshots
